-- AUTOGENERATED
return {
  string = {
    code = 233,
    bits = 8,
  },
  [ "-" ] = {
    code = 102,
    bits = 7,
  },
  table = {
    code = 492,
    bits = 9,
  },
  [ "*" ] = {
    code = 221,
    bits = 8,
  },
  type = {
    code = 494,
    bits = 9,
  },
  pairs = {
    code = 1003,
    bits = 10,
  },
  ipairs = {
    code = 2033,
    bits = 11,
  },
  getmetatable = {
    code = 4086,
    bits = 12,
  },
  setmetatable = {
    code = 2038,
    bits = 11,
  },
  [ ";" ] = {
    code = 223,
    bits = 8,
  },
  os = {
    code = 1002,
    bits = 10,
  },
  select = {
    code = 4088,
    bits = 12,
  },
  [ "~=nil" ] = {
    code = 1008,
    bits = 10,
  },
  tostring = {
    code = 2040,
    bits = 11,
  },
  error = {
    code = 2028,
    bits = 11,
  },
  pcall = {
    code = 4087,
    bits = 12,
  },
  load = {
    code = 8187,
    bits = 13,
  },
  [ "%" ] = {
    code = 478,
    bits = 9,
  },
  [ "^" ] = {
    code = 1000,
    bits = 10,
  },
  [ "(" ] = {
    code = 2,
    bits = 4,
  },
  [ "~=" ] = {
    code = 496,
    bits = 9,
  },
  [ "<=" ] = {
    code = 997,
    bits = 10,
  },
  [ ">=" ] = {
    code = 999,
    bits = 10,
  },
  require = {
    code = 2037,
    bits = 11,
  },
  [ "." ] = {
    code = 5,
    bits = 4,
  },
  sub = {
    code = 491,
    bits = 9,
  },
  [ "..." ] = {
    code = 2021,
    bits = 11,
  },
  [ "function(" ] = {
    code = 231,
    bits = 8,
  },
  [ "[0]=" ] = {
    code = 8183,
    bits = 13,
  },
  [ "},{" ] = {
    code = 495,
    bits = 9,
  },
  find = {
    code = 2029,
    bits = 11,
  },
  match = {
    code = 2034,
    bits = 11,
  },
  gsub = {
    code = 2031,
    bits = 11,
  },
  math = {
    code = 488,
    bits = 9,
  },
  [ ":append" ] = {
    code = 262142,
    bits = 18,
  },
  close = {
    code = 2025,
    bits = 11,
  },
  [ "=" ] = {
    code = 7,
    bits = 4,
  },
  io = {
    code = 2032,
    bits = 11,
  },
  _ENV = {
    code = 8184,
    bits = 13,
  },
  [ "local function" ] = {
    code = 487,
    bits = 9,
  },
  [ "()" ] = {
    code = 100,
    bits = 7,
  },
  [ "+1" ] = {
    code = 222,
    bits = 8,
  },
  debug = {
    code = 2027,
    bits = 11,
  },
  [ "0" ] = {
    code = 44,
    bits = 6,
  },
  [ "1" ] = {
    code = 45,
    bits = 6,
  },
  [ "2" ] = {
    code = 104,
    bits = 7,
  },
  [ ":local" ] = {
    code = 0,
    bits = 3,
  },
  [ ":string" ] = {
    code = 18,
    bits = 5,
  },
  [ ":field" ] = {
    code = 6,
    bits = 4,
  },
  [ ":global" ] = {
    code = 16,
    bits = 5,
  },
  [ ":number" ] = {
    code = 17,
    bits = 5,
  },
  bit32 = {
    code = 1001,
    bits = 10,
  },
  [ ")" ] = {
    code = 3,
    bits = 4,
  },
  [ "#" ] = {
    code = 220,
    bits = 8,
  },
  read = {
    code = 1005,
    bits = 10,
  },
  package = {
    code = 2036,
    bits = 11,
  },
  [ "...)" ] = {
    code = 996,
    bits = 10,
  },
  [ "then return" ] = {
    code = 234,
    bits = 8,
  },
  [ "then error" ] = {
    code = 493,
    bits = 9,
  },
  [ "==nil" ] = {
    code = 483,
    bits = 9,
  },
  [ "=nil" ] = {
    code = 998,
    bits = 10,
  },
  [ "break end" ] = {
    code = 2024,
    bits = 11,
  },
  [ "for _ ," ] = {
    code = 2030,
    bits = 11,
  },
  [ "{}" ] = {
    code = 237,
    bits = 8,
  },
  [ ":upvalue1" ] = {
    code = 19,
    bits = 5,
  },
  [ ".." ] = {
    code = 103,
    bits = 7,
  },
  _ = {
    code = 4084,
    bits = 12,
  },
  open = {
    code = 2035,
    bits = 11,
  },
  [ "{" ] = {
    code = 236,
    bits = 8,
  },
  [ "[" ] = {
    code = 20,
    bits = 5,
  },
  [ "/" ] = {
    code = 480,
    bits = 9,
  },
  [ "}" ] = {
    code = 238,
    bits = 8,
  },
  [ "end" ] = {
    code = 21,
    bits = 5,
  },
  [ "\"\"" ] = {
    code = 994,
    bits = 10,
  },
  [ "end end" ] = {
    code = 228,
    bits = 8,
  },
  [ "while true do" ] = {
    code = 4089,
    bits = 12,
  },
  write = {
    code = 1007,
    bits = 10,
  },
  [ "+" ] = {
    code = 101,
    bits = 7,
  },
  [ ":upvalue2" ] = {
    code = 481,
    bits = 9,
  },
  [ ":upvalue3" ] = {
    code = 2022,
    bits = 11,
  },
  __newindex = {
    code = 8185,
    bits = 13,
  },
  print = {
    code = 1004,
    bits = 10,
  },
  [ ">" ] = {
    code = 484,
    bits = 9,
  },
  __eq = {
    code = 65534,
    bits = 16,
  },
  __len = {
    code = 131070,
    bits = 17,
  },
  [ "\" \"" ] = {
    code = 2018,
    bits = 11,
  },
  [ "\"r\"" ] = {
    code = 8181,
    bits = 13,
  },
  [ "\"w\"" ] = {
    code = 8182,
    bits = 13,
  },
  [ "\"rb\"" ] = {
    code = 16380,
    bits = 14,
  },
  [ "\"wb\"" ] = {
    code = 16381,
    bits = 14,
  },
  [ "\"string\"" ] = {
    code = 995,
    bits = 10,
  },
  [ "\"number\"" ] = {
    code = 2019,
    bits = 11,
  },
  [ "\"boolean\"" ] = {
    code = 8180,
    bits = 13,
  },
  [ "\"nil\"" ] = {
    code = 4083,
    bits = 12,
  },
  [ "\"function\"" ] = {
    code = 4082,
    bits = 12,
  },
  [ "\"table\"" ] = {
    code = 2020,
    bits = 11,
  },
  [ "-1" ] = {
    code = 479,
    bits = 9,
  },
  self = {
    code = 109,
    bits = 7,
  },
  [ ":end" ] = {
    code = 262143,
    bits = 18,
  },
  __call = {
    code = 16382,
    bits = 14,
  },
  [ ":upvalue" ] = {
    code = 32766,
    bits = 15,
  },
  [ "and" ] = {
    code = 224,
    bits = 8,
  },
  [ "break" ] = {
    code = 8186,
    bits = 13,
  },
  [ "do" ] = {
    code = 225,
    bits = 8,
  },
  [ "else" ] = {
    code = 226,
    bits = 8,
  },
  [ "elseif" ] = {
    code = 227,
    bits = 8,
  },
  [ "," ] = {
    code = 4,
    bits = 4,
  },
  [ "false" ] = {
    code = 485,
    bits = 9,
  },
  [ "for" ] = {
    code = 229,
    bits = 8,
  },
  [ "function" ] = {
    code = 230,
    bits = 8,
  },
  [ "==" ] = {
    code = 106,
    bits = 7,
  },
  [ "if" ] = {
    code = 47,
    bits = 6,
  },
  [ "in" ] = {
    code = 486,
    bits = 9,
  },
  [ "local" ] = {
    code = 48,
    bits = 6,
  },
  [ "nil" ] = {
    code = 489,
    bits = 9,
  },
  [ "not" ] = {
    code = 490,
    bits = 9,
  },
  [ "or" ] = {
    code = 232,
    bits = 8,
  },
  [ "repeat" ] = {
    code = 8188,
    bits = 13,
  },
  [ "return" ] = {
    code = 108,
    bits = 7,
  },
  [ "then" ] = {
    code = 49,
    bits = 6,
  },
  [ "true" ] = {
    code = 235,
    bits = 8,
  },
  [ "until" ] = {
    code = 8189,
    bits = 13,
  },
  [ "while" ] = {
    code = 1006,
    bits = 10,
  },
  __index = {
    code = 4085,
    bits = 12,
  },
  [ "]=" ] = {
    code = 107,
    bits = 7,
  },
  [ ":" ] = {
    code = 105,
    bits = 7,
  },
  [ "]" ] = {
    code = 46,
    bits = 6,
  },
  _G = {
    code = 2023,
    bits = 11,
  },
  tonumber = {
    code = 2039,
    bits = 11,
  },
  [ "<" ] = {
    code = 482,
    bits = 9,
  },
  coroutine = {
    code = 2026,
    bits = 11,
  },
}